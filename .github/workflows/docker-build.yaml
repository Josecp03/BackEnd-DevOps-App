name: Build & Push Backend to Azure ACR

on:
  push:
    branches:
      - main
    paths:
      - 'src/**'
      - 'pom.xml'
      - 'mvnw'
      - '.mvn/**'
      - 'Dockerfile'
  
  workflow_dispatch: 

permissions:
  contents: write  

env:
  IMAGE_NAME: backend  

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    environment: dev   

    steps:
      # 1. Checkout del repo
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2. Login en Azure ACR 
      - name: Log in to Azure Container Registry
        uses: azure/docker-login@v1
        with:
          login-server: ${{ vars.REGISTRY }}   
          username: ${{ secrets.AZURE_ACR_USERNAME }}
          password: ${{ secrets.AZURE_ACR_PASSWORD }}

      # 3. Configurar versión semántica automática (sin 'v')
      - name: Bump version and push tag
        id: tag_version
        uses: mathieudutour/github-tag-action@v6.2
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          tag_prefix: ""

      # 4. Construir y etiquetar imagen Docker
      - name: Build Docker image
        run: |
          REGISTRY_CLEAN=$(echo "${{ vars.REGISTRY }}" | tr -d '\r')
          docker build -t $REGISTRY_CLEAN/${{ env.IMAGE_NAME }}:${{ steps.tag_version.outputs.new_tag }} .
          docker tag $REGISTRY_CLEAN/${{ env.IMAGE_NAME }}:${{ steps.tag_version.outputs.new_tag }} $REGISTRY_CLEAN/${{ env.IMAGE_NAME }}:latest

      # 5. Subir la imagen a ACR
      - name: Push Docker image
        run: |
          REGISTRY_CLEAN=$(echo "${{ vars.REGISTRY }}" | tr -d '\r')
          docker push $REGISTRY_CLEAN/${{ env.IMAGE_NAME }}:${{ steps.tag_version.outputs.new_tag }}
          docker push $REGISTRY_CLEAN/${{ env.IMAGE_NAME }}:latest
